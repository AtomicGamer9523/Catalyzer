searchState.loadedDescShard("catalyzer", 0, "Catalyzer is a web framework for Rust, made to be simple …\nThe main application type.\nA shortcut for creating an <code>App</code> instance.\nAn error type for Catalyzer operations.\nContains the error value\nA shortcut for creating a <code>NoAddress</code> error.\nContains the success value\nA specialized <code>Result</code> type for Catalyzer operations.\nA shortcut for creating a <code>RuntimeInitializationError</code>.\nA shortcut for creating a <code>UnsupportedMethodError</code>.\nBinds the application to a specific address.\nAllows for simplistic creation of web applications.\nA route handler for the <code>DELETE</code> method.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA route handler for the <code>GET</code> method.\nA route handler for the <code>HEAD</code> method.\nReveals the inner router of the application.\n<strong>!!! INTERNALS !!! DO NOT USE DIRECTLY!!!</strong>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner error.\nCatalyzes the application and launches it.\nMarks a function as the main entry point for the …\nCreates a new <code>CatalyzerError</code> from the given inner error.\nCreates a new <code>App</code> instance.\nA route handler for the <code>OPTIONS</code> method.\nA route handler for the <code>PATCH</code> method.\nA route handler for the <code>POST</code> method.\nA route handler for the <code>PUT</code> method.\nA collection of request types and utilities.\nA collection of response types and utilities.\nMounts a route handler on the application.\nMounts a service on the application.\nSets the state of the application.\nA route handler for the <code>TRACE</code> method.\nTrait for async functions that can be used to handle …\nThe router type for composing handlers and services.\nCONNECT\nA Catalyzed application that is ready to be launched.\nA runtime for the Catalyzer framework.\nA builder for the <code>CatalyzerRuntime</code>.\nA trait that represents a Catalyzer service.\nDELETE\nErrors produced by the service.\nThe future response value.\nThe type of future calling this handler returns.\nGET\nHEAD\nA trait that represents a handler metadata.\nAn Inner error type for Catalyzer operations.\nA cloneable, transparent wrapper around an I/O error.\nAn I/O error occurred.\nMethod to handle.\nThe Request Method (VERB)\nNo address was provided.\nOPTIONS\nAn extension trait for <code>Option</code>s.\nPATCH\nPath to mount the handler on.\nPath to mount the service on.\nPOST\nPUT\nResponses given by the service.\nAn extension trait for <code>Result</code>s.\nAn error occurred while initializing the runtime.\nTRACE\nAn asynchronous function from a <code>Request</code> to a <code>Response</code>.\nThe provided method is not supported.\nAn error occurred while converting a byte array to a UTF-8 …\nConvert the router into a borrowed <code>Service</code> with a fixed …\nReturn a &amp;str representation of the HTTP method\nBuilds the <code>CatalyzerRuntime</code>.\nCreates a new builder for the runtime.\nProcess the request and return the response asynchronously.\nCall the handler with the given request.\nContent loaders for strings and bytes.\nRe-exports of crates used in Catalyzer.\nAdd a fallback <code>Handler</code> to the router.\nAdd a fallback <code>Service</code> to the router.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP method.\nInitializes the runtime with an optional custom …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this router into a <code>MakeService</code>, that is a <code>Service</code> …\nConvert this router into a <code>MakeService</code>, that will store <code>C</code>…\nConvert the router into an owned <code>Service</code> with a fixed …\nWhether a method is considered “idempotent”, meaning …\nWhether a method is considered “safe”, meaning the …\nReturns the kind of the error.\nApply a <code>tower::Layer</code> to all routes in the router.\nApply a <code>tower::Layer</code> to the handler.\nConvert the result into another result type.\nMaps the option to another option type.\nMerge the paths and fallbacks of two routers into a single …\nNest a <code>Router</code> at some path.\nLike <code>nest</code>, but accepts an arbitrary <code>Service</code>.\nCreate a new <code>Router</code>.\nUnwraps the option, or returns an error.\nReturns <code>Poll::Ready(Ok(()))</code> when the service is able to …\nAdd another route to the router.\nApply a <code>tower::Layer</code> to the router that will only run if …\nAdd another route to the router that calls a <code>Service</code>.\nRuns the given future on the runtime.\nRuntime management for the Catalyzer framework.\nAllows you to set up the Tokio runtime.\nUnwraps the option, or returns a default value (converted …\nProvide the state for the router.\nConvert the handler into a <code>Service</code> by providing the state\nA content loader for bytes.\nA content loader for valid UTF-8 strings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>StringContentLoader</code> from a file.\nCreates a new <code>BytesContentLoader</code> from a file.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>StringContentLoader</code> from a static string.\nCreates a new <code>BytesContentLoader</code> from a static byte slice.\nCreates a new <code>StringContentLoader</code> from an allocated <code>String</code>.\nCreates a new <code>BytesContentLoader</code> from an allocated <code>Vec&lt;u8&gt;</code>.\nAlias for a type-erased error type.\nErrors that can happen when using axum.\nExtractor and response for extensions.\nURL encoded extractor and response.\nJSON Extractor / Response.\nExtension trait that adds additional methods to <code>Request</code>.\nExtension trait that adds additional methods to <code>Parts</code>.\nThe router type for composing handlers and services.\nExtension trait that adds additional methods to any <code>Service</code>…\nHTTP body utilities.\nError handling model and utilities\nTypes and traits for extracting data from requests.\nApply an extractor to this <code>Request</code>.\nApply an extractor to this <code>Parts</code>.\nApply a parts extractor to this <code>Request</code>.\nApply a parts extractor that requires some state to this …\nApply an extractor that requires some state to this <code>Request</code>…\nApply an extractor that requires some state to this <code>Parts</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a <code>Json&lt;T&gt;</code> from a byte slice. Most users should …\nConvert this service into a <code>HandleError</code>, that will handle …\nAsync functions that can be used to handle requests.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an <code>Error</code> back into the underlying boxed trait …\nConsumes the request, returning the body wrapped in …\nConvert this service into a <code>MakeService</code>, that is a <code>Service</code> …\nConvert this service into a <code>MakeService</code>, that will store <code>C</code>…\nUtilities for writing middleware\nCreate a new <code>Error</code> from a boxable error.\nTypes and traits for generating responses.\nRouting between <code>Service</code>s and handlers.\nServe services.\nServe the service with the supplied listener.\nApply the default body limit.\nThe body type used in axum requests and responses.\nA stream of data frames.\nA cheaply cloneable and sliceable chunk of contiguous …\nValues yielded by the <code>Body</code>.\nThe error type this <code>Body</code> might generate.\nTrait representing a streaming body of a Request or …\nClears the buffer, removing all data.\nCreates <code>Bytes</code> instance from slice, by copying it.\nCreate an empty body.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Bytes</code> from a static slice.\nCreate a new <code>Body</code> from a <code>Stream</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the body into a <code>Stream</code> of data frames.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns <code>true</code> when the end of stream has been reached.\nReturns true if this is the only reference to the data.\nReturns the number of bytes contained in this <code>Bytes</code>.\nCreates a new empty <code>Bytes</code>.\nCreate a new <code>Body</code> that wraps another <code>http_body::Body</code>.\nAttempt to pull out the next data buffer of this stream.\nReturns the bounds on the remaining length of the stream.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nConverts <code>Body</code> into <code>Bytes</code> and limits the maximum size of …\nShortens the buffer, keeping the first <code>len</code> bytes and …\nA <code>Service</code> adapter that handles errors by converting them …\n<code>Layer</code> that applies <code>HandleError</code> which is a <code>Service</code> adapter …\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuture types.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>HandleErrorLayer</code>.\nCreate a new <code>HandleError</code>.\nResponse future for [<code>HandleError</code>].\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExtractor for getting connection information produced by a …\nLayer for configuring the default request body limit.\nExtractor and response for extensions.\nURL encoded extractor and response.\nUsed to do reference-to-value conversions thus not …\nTypes that can be created from requests.\nTypes that can be created from request parts.\nExtractor that resolves the hostname of the request.\nJSON Extractor / Response.\nAccess the path in the router that matches the request.\nAccess the path the matched the route is nested at.\nExtractor that gets the original request URI regardless of …\nExtractor that will get captures from the URL and parse …\nExtractor that deserializes query strings into some type.\nExtractor that extracts raw form requests.\nExtractor that will get captures from the URL without …\nExtractor that extracts the raw query string, without …\nIf the extractor fails it’ll use this “rejection” …\nIf the extractor fails it’ll use this “rejection” …\nType alias for <code>http::Request</code> whose body type defaults to …\nExtractor for state.\nReturns a <code>str</code> representation of the path.\nReturns a <code>str</code> representation of the path.\nExtractor for getting connection information from a client.\nDisable the default request body limit.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts to this type from a reference to the input type.\nPerform the extraction.\nPerform the extraction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet an iterator over the path parameters.\nSet the default request body limit.\nExtractor that will get captures from the URL and parse …\nRejection response types.\nAttempts to construct a <code>Query</code> from a reference to a <code>Uri</code>.\nExtractor for getting connection information produced by a …\nTrait that connected IO resources implement and use to …\nA <code>MakeService</code> created from a router.\nMiddleware used to mock <code>ConnectInfo</code> during tests.\nResponse future for <code>IntoMakeServiceWithConnectInfo</code>.\nCreate type holding information about the connection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe kinds of errors that can happen we deserializing into …\nRejection type for <code>Path</code> if the captured routes params …\nRejection used by <code>RawPathParams</code> if a parameter contained …\nA parameter contained text that, once percent decoded, wasn…\nCatch-all variant for errors that don’t fit any other …\nFailed to parse a value into the expected type.\nFailed to parse the value at a specific index into the …\nFailed to parse the value at a specific key into the …\nExtractor that will get captures from the URL and parse …\nExtractor that will get captures from the URL without …\nAn iterator over raw path parameters.\nTried to serialize into an unsupported type such as nested …\nThe URI contained the wrong number of parameters.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe number of expected parameters.\nThe expected type of the value.\nThe expected type of the value.\nThe expected type of the value.\nThe number of actual parameters in the URI.\nThe index at which the value was located.\nThe key at which the value was located.\nThe key at which the invalid value was located.\nThe name of the unsupported type.\nThe value from the URI.\nThe value from the URI.\nThe value from the URI.\nRejection used for <code>Bytes</code>.\nRejection used for <code>Extension</code>.\nRejection type for extractors that buffer the request …\nRejection type used if the <code>Form</code> extractor is unable to …\nRejection type used if the <code>Form</code> extractor is unable to …\nRejection type for <code>Path</code> if the captured routes params …\nRejection type used if the <code>Query</code> extractor is unable to …\nRejection type used if the <code>Host</code> extractor is unable to …\nRejection used for <code>Form</code>.\nRejection used for <code>Host</code>.\nRejection type for <code>Form</code> or <code>RawForm</code> used if the <code>Content-Type</code>…\nRejection type used when buffering the request into a …\nRejection used by <code>RawPathParams</code> if a parameter contained …\nRejection type for <code>Json</code>.\nRejection used for <code>Json</code>.\nRejection type for <code>Json</code>.\nEncountered some other error when buffering the body.\nRejection if no matched path could be found.\nRejection used for <code>MatchedPath</code>.\nRejection type for <code>Extension</code> if an expected request …\nRejection type for <code>Json</code> used if the <code>Content-Type</code> header is …\nRejection type used if axum’s internal representation of …\nRejection type for <code>NestedPath</code>.\nRejection used for <code>Path</code>.\nRejection used for <code>Query</code>.\nRejection used for <code>RawForm</code>.\nRejection used for <code>RawPathParams</code>.\nRejection used for <code>String</code>.\nEncountered an unknown error when buffering the body.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nGet the response body text used for this rejection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this error into the underlying error kind.\nGet a reference to the underlying error kind.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nGet the status code used for this rejection.\nThe type of future calling this handler returns.\nTrait for async functions that can be used to handle …\nAn adapter that makes a <code>Handler</code> into a <code>Service</code>.\nExtension trait for <code>Handler</code>s that don’t have state.\nA <code>Service</code> created from a <code>Handler</code> by applying a Tower …\nCall the handler with the given request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandler future types.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the handler into a <code>MakeService</code> and no state.\nConvert the handler into a <code>MakeService</code>.\nConvert the handler into a <code>MakeService</code> which stores …\nConvert the handler into a <code>MakeService</code> which stores …\nConvert the handler into a <code>Service</code> and no state.\nApply a <code>tower::Layer</code> to the handler.\nGet a reference to the state.\nConvert the handler into a <code>Service</code> by providing the state\nThe response future for <code>IntoService</code>.\nThe response future for <code>Layered</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n202 Accepted [RFC7231, Section 6.3.3]\n208 Already Reported [RFC5842]\n502 Bad Gateway [RFC7231, Section 6.6.3]\n400 Bad Request [RFC7231, Section 6.5.1]\n409 Conflict [RFC7231, Section 6.5.8]\n100 Continue [RFC7231, Section 6.2.1]\n201 Created [RFC7231, Section 6.3.2]\n417 Expectation Failed [RFC7231, Section 6.5.14]\nContains the error value\nA generic “error” for HTTP connections\nA type map of protocol extensions.\n424 Failed Dependency [RFC4918]\n403 Forbidden [RFC7231, Section 6.5.3]\n302 Found [RFC7231, Section 6.4.3]\n504 Gateway Timeout [RFC7231, Section 6.6.5]\n410 Gone [RFC7231, Section 6.5.9]\n<code>HTTP/0.9</code>\n<code>HTTP/1.0</code>\n<code>HTTP/1.1</code>\n<code>HTTP/2.0</code>\n<code>HTTP/3.0</code>\n505 HTTP Version Not Supported [RFC7231, Section 6.6.6]\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229]\n507 Insufficient Storage [RFC4918]\n500 Internal Server Error [RFC7231, Section 6.6.1]\n411 Length Required [RFC7231, Section 6.5.10]\n423 Locked [RFC4918]\n508 Loop Detected [RFC5842]\n405 Method Not Allowed [RFC7231, Section 6.5.5]\n421 Misdirected Request RFC7540, Section 9.1.2\n301 Moved Permanently [RFC7231, Section 6.4.2]\n300 Multiple Choices [RFC7231, Section 6.4.1]\n207 Multi-Status [RFC4918]\nThe Request Method (VERB)\n511 Network Authentication Required [RFC6585]\n203 Non-Authoritative Information [RFC7231, Section 6.3.4]\n406 Not Acceptable [RFC7231, Section 6.5.6]\n510 Not Extended [RFC2774]\n404 Not Found [RFC7231, Section 6.5.4]\n501 Not Implemented [RFC7231, Section 6.6.2]\n304 Not Modified [RFC7232, Section 4.1]\n204 No Content [RFC7231, Section 6.3.5]\n200 OK [RFC7231, Section 6.3.1]\nContains the success value\n206 Partial Content [RFC7233, Section 4.1]\n413 Payload Too Large [RFC7231, Section 6.5.11]\n402 Payment Required [RFC7231, Section 6.5.2]\n308 Permanent Redirect [RFC7238]\n412 Precondition Failed [RFC7232, Section 4.2]\n428 Precondition Required [RFC6585]\n102 Processing [RFC2518]\n407 Proxy Authentication Required [RFC7235, Section 3.2]\n416 Range Not Satisfiable [RFC7233, Section 4.4]\n431 Request Header Fields Too Large [RFC6585]\n408 Request Timeout [RFC7231, Section 6.5.7]\n205 Reset Content [RFC7231, Section 6.3.6]\nRepresents an HTTP request.\nRepresents an HTTP response\nA <code>Result</code> typedef to use with the <code>http::Error</code> type\n303 See Other [RFC7231, Section 6.4.4]\n503 Service Unavailable [RFC7231, Section 6.6.4]\n101 Switching Protocols [RFC7231, Section 6.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\n307 Temporary Redirect [RFC7231, Section 6.4.7]\n429 Too Many Requests [RFC6585]\n401 Unauthorized [RFC7235, Section 3.1]\n451 Unavailable For Legal Reasons [RFC7725]\n422 Unprocessable Entity [RFC4918]\n415 Unsupported Media Type [RFC7231, Section 6.5.13]\n426 Upgrade Required [RFC7231, Section 6.5.15]\n414 URI Too Long [RFC7231, Section 6.5.12]\n305 Use Proxy [RFC7231, Section 6.4.5]\nThe URI component of a request.\n506 Variant Also Negotiates [RFC2295]\nRepresents a version of the HTTP spec.\nInserts a key-value pair into the map.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns a <code>str</code> representation of the header.\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nGet the authority of this <code>Uri</code>.\nReturns a reference to the associated HTTP body.\nReturns a reference to the associated HTTP body.\nReturns a mutable reference to the associated HTTP body.\nReturns a mutable reference to the associated HTTP body.\nCreates a new builder-style object to manufacture a <code>Request</code>\nCreates a new builder-style object to manufacture a …\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nGet the standardised <code>reason-phrase</code> for this status code.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nClear the <code>Extensions</code> of all inserted extensions.\nCreates a new <code>Builder</code> initialized with a CONNECT method …\nReturns true if the map contains a value for the specified …\nCreates a new <code>Builder</code> initialized with a DELETE method and …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nExtends <code>self</code> with another <code>Extensions</code>.\nReturns a reference to the associated extensions.\nReturns a reference to the associated extensions.\nReturns a mutable reference to the associated extensions.\nReturns a mutable reference to the associated extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConverts a &amp;u8 to a status code\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nCreates a new <code>Request</code> with the given components parts and …\nCreates a new <code>Response</code> with the given head and body\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nConvert a <code>Uri</code> from a static string.\nAttempt to convert a string to a <code>HeaderValue</code>.\nConverts a u16 to a status code.\nReturns a reference to the value associated with the key.\nCreates a new <code>Builder</code> initialized with a GET method and …\nGet a reference to a type previously inserted on this …\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nGet a mutable reference to a type previously inserted on …\nGet a mutable reference to a type, inserting <code>value</code> if not …\nGet a mutable reference to a type, inserting the type’s …\nGet a mutable reference to a type, inserting the value …\nReturn a reference to the lower level, inner error.\nCreates a new <code>Builder</code> initialized with a HEAD method and …\nHTTP header types\nReturns a reference to the associated header field map.\nReturns a reference to the associated header field map.\nReturns a mutable reference to the associated header field …\nReturns a mutable reference to the associated header field …\nGet the host of this <code>Uri</code>.\nPanics\nInserts a key-value pair into the map.\nInsert a type into this <code>Extensions</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the request, returning just the body.\nConsumes the response, returning just the body.\nCreates a consuming iterator, that is, one that moves keys …\nConsumes the request returning the head and body parts.\nConsumes the response returning the head and body parts.\nConvert a <code>Uri</code> into <code>Parts</code>.\nReturn true if the underlying error has the same type as T.\nCheck if status is within 400-499.\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nCheck whether the extension set is empty or not.\nCheck if status is within 100-199.\nCheck if status is within 300-399.\nReturns <code>true</code> if the value represents sensitive data.\nCheck if status is within 500-599.\nCheck if status is within 200-299.\nAn iterator visiting all key-value pairs.\nAn iterator visiting all key-value pairs, with mutable …\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nGet the numer of extensions available.\nConsumes the request returning a new request with body …\nConsumes the response returning a new response with body …\nThe HTTP request method\nReturns a reference to the associated HTTP method.\nReturns a mutable reference to the associated HTTP method.\nCreate an empty <code>HeaderMap</code>.\nCreates a new blank <code>Request</code> with the body\nCreates a new blank <code>Response</code> with the body\nCreate an empty <code>Extensions</code>.\nCreates a new <code>Builder</code> initialized with an OPTIONS method …\nCreates a new <code>Builder</code> initialized with a PATCH method and …\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nGet the port part of this <code>Uri</code>.\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nCreates a new <code>Builder</code> initialized with a POST method and …\nCreates a new <code>Builder</code> initialized with a PUT method and …\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nRemoves a key from the map, returning the value associated …\nRemove a type from this <code>Extensions</code>.\nHTTP request types.\nReserves capacity for at least <code>additional</code> more headers to …\nHTTP response types.\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\nMark that the header value represents sensitive …\nHTTP status codes\nReturns the <code>StatusCode</code>.\nReturns a mutable reference to the associated <code>StatusCode</code>.\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nCreates a new <code>Builder</code> initialized with a TRACE method and …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nURI component of request and response lines\nReturns a reference to the associated URI.\nReturns a mutable reference to the associated URI.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nHTTP version\nReturns the associated version.\nReturns a reference to the associated version.\nReturns a mutable reference to the associated version.\nReturns a mutable reference to the associated version.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\nA marker trait used to identify values that can be used as …\nSpecifies directives for caching mechanisms in both …\nIndicates how caches have handled a response and its …\nSpecifies directives that allow origin servers to control …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\nA drain iterator for <code>HeaderMap</code>.\nIdentifier for a specific version of a resource.\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA view into a single location in a <code>HeaderMap</code>, which may be …\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA view to all values stored in a single entry.\nSpecifies the domain name of the server and (optionally) …\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nA marker trait used to identify values that can be used as …\nAn owning iterator over the entries of a <code>HeaderMap</code>.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\n<code>HeaderMap</code> entry iterator.\n<code>HeaderMap</code> mutable entry iterator\nAn iterator over <code>HeaderMap</code> keys.\nContent-Types that are acceptable for the response.\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nIndicates the max number of intermediaries the request …\nError returned when max capacity of <code>HeaderMap</code> is exceeded\nIndicates where a fetch originates from.\nAn occupied entry\nA view into a single occupied location in a <code>HeaderMap</code>.\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\nTells the client to communicate with HTTPS instead of …\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nA vacant entry\nA view into a single empty location in a <code>HeaderMap</code>.\nAn drain iterator of all values associated with a single …\nAn iterator of all values associated with a single header …\nA mutable iterator of all values associated with a single …\n<code>HeaderMap</code> value iterator.\n<code>HeaderMap</code> mutable value iterator\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nInsert the value into the entry.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a reference to the first value in the entry.\nGet a mutable reference to the first value in the entry.\nInsert the value into the entry.\nSets the value of the entry.\nInsert the value into the entry.\nSets the value of the entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of the key\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns an iterator visiting all values associated with …\nReturns an iterator visiting all values associated with …\nReturns an iterator mutably visiting all values associated …\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nRemove the entry from the map.\nRemove the entry from the map.\nRemove the entry from the map.\nInsert the value into the entry.\nInsert the value into the entry.\nA possible error value when converting <code>Method</code> from bytes.\nThe Request Method (VERB)\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAn HTTP request builder\nComponent parts of an HTTP <code>Request</code>\nRepresents an HTTP request.\n“Consumes” this builder, using the provided <code>body</code> to …\nAdds an extension to this builder\nThe request’s extensions\nGet a mutable reference to the extensions for this request …\nGet a reference to the extensions for this request builder.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAppends a header to this request builder.\nThe request’s headers\nGet headers on this request builder.\nGet header on this request builder. when builder has error …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the HTTP method for this request.\nThe request’s method\nGet the HTTP Method for this request.\nCreates a new default instance of <code>Builder</code> to construct a …\nSet the URI for this request.\nThe request’s URI\nGet the URI for this request\nSet the HTTP version for this request.\nThe request’s version\nGet the HTTP version for this request\nAn HTTP response builder\nComponent parts of an HTTP <code>Response</code>\nRepresents an HTTP response\n“Consumes” this builder, using the provided <code>body</code> to …\nAdds an extension to this builder\nThe response’s extensions\nGet a mutable reference to the extensions for this …\nGet a reference to the extensions for this response …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAppends a header to this response builder.\nThe response’s headers\nGet header on this response builder. when builder has …\nGet header on this response builder.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new default instance of <code>Builder</code> to construct …\nSet the HTTP status for this response.\nThe response’s status\nSet the HTTP version for this response.\nThe response’s version\nA possible error value when converting a <code>StatusCode</code> from a …\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents the authority component of a URI.\nA builder for <code>Uri</code>s.\nHTTP protocol scheme\nHTTP protocol over TLS.\nAn error resulting from a failed attempt to construct a …\nAn error resulting from a failed attempt to construct a …\nThe various parts of a URI.\nRepresents the path component of a URI\nThe port component of a URI.\nRepresents the scheme component of a URI\nThe URI component of a request.\nReturns the port number as a <code>str</code>.\nReturn a str representation of the authority\nReturns the path and query as a string component.\nReturn a str representation of the scheme\nReturns the port number as a <code>u16</code>.\nSet the <code>Authority</code> for this URI.\nThe authority component of a URI\nConsumes this builder, and tries to construct a valid <code>Uri</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.\nAttempt to convert an <code>Authority</code> from a static string.\nConvert a <code>PathAndQuery</code> from a static string.\nGet the host of this <code>Authority</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new default instance of <code>Builder</code> to construct a …\nReturns the path component\nSet the <code>PathAndQuery</code> for this URI.\nThe origin-form component of a URI\nGet the port part of this <code>Authority</code>.\nGet the port of this <code>Authority</code> as a <code>u16</code>.\nReturns the query string component\nSet the <code>Scheme</code> for this URI.\nThe scheme component of a URI\nRepresents a version of the HTTP spec.\nMiddleware for adding some shareable value to request …\nMiddleware that runs an extractor and discards the value.\n<code>Layer</code> that applies <code>FromExtractor</code> that runs an extractor and\nA middleware created from an async function.\nA <code>tower::Layer</code> from an async function.\nTrait implemented by types that can be returned from …\nA middleware created from an async function that …\nA <code>tower::Layer</code> from an async function that transforms a …\nA middleware created from an async function that …\nA <code>tower::Layer</code> from an async function that transforms a …\nThe remainder of a middleware stack, including the handler.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a middleware from an extractor.\nCreate a middleware from an extractor with the given state.\nCreate a middleware from an async function.\nCreate a middleware from an async function with the given …\nFuture types.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPerform the conversion.\nCreate a middleware from an async function that transforms …\nCreate a middleware from an async function that transforms …\nCreate a middleware from an async function that transforms …\nCreate a middleware from an async function that transforms …\nExecute the remaining middleware stack.\nResponse future for <code>FromExtractor</code>.\nResponse future for <code>FromFn</code>.\nResponse future for <code>MapRequest</code>.\nResponse future for <code>MapResponse</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAppend headers to a response.\nContains the error value\nThe type returned in the event of an error.\nAn <code>IntoResponse</code>-based error type\nExtractor and response for extensions.\nURL encoded extractor and response.\nAn HTML response.\nTrait for generating responses.\nTrait for adding headers and extensions to a response.\nJSON Extractor / Response.\nContains the success value\nResponse that redirects the request to another location.\nType alias for <code>http::Response</code> whose body type defaults to …\nParts of a response.\nAn <code>IntoResponse</code>-based result type that uses <code>ErrorResponse</code> …\nAn SSE response\nGets a reference to the response extensions.\nGets a mutable reference to the response extensions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the response headers.\nGets a mutable reference to the response headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a response.\nSet parts of the response\nConfigure the interval between keep-alive messages.\nCreate a new <code>Sse</code> response that will respond with the given …\nCreate a new <code>Redirect</code> that uses a <code>308 Permanent Redirect</code> …\nServer-Sent Events (SSE) responses.\nCreate a new <code>Redirect</code> that uses a <code>307 Temporary Redirect</code> …\nCreate a new <code>Redirect</code> that uses a <code>303 See Other</code> status …\nServer-sent event\nConfigure the interval between keep-alive messages, the …\nAn SSE response\nSet the event’s comment field (<code>:&lt;comment-text&gt;</code>).\nSet the event’s data data field(s) (<code>data: &lt;content&gt;</code>)\nSet the event’s name field (<code>event:&lt;event-name&gt;</code>).\nCustomize the event of the keep-alive message.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the event’s identifier field (<code>id:&lt;identifier&gt;</code>).\nCustomize the interval between keep-alive messages.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the event’s data field to a value serialized as …\nCreate a new <code>KeepAlive</code>.\nSet the event’s retry timeout field (<code>retry:&lt;timeout&gt;</code>).\nCustomize the text of the keep-alive message.\nMatch <code>DELETE</code> requests.\nMatch <code>GET</code> requests.\nMatch <code>HEAD</code> requests.\nA <code>MakeService</code> that produces axum router services.\nA filter that matches one or more HTTP methods.\nA <code>Service</code> that accepts requests based on a <code>MethodFilter</code> and\nMatch <code>OPTIONS</code> requests.\nMatch <code>PATCH</code> requests.\nMatch <code>POST</code> requests.\nMatch <code>PUT</code> requests.\nHow routes are stored inside a <code>Router</code>.\nThe router type for composing handlers and services.\nA <code>Router</code> converted into a borrowed <code>Service</code> with a fixed …\nA <code>Router</code> converted into an owned <code>Service</code> with a fixed body …\nMatch <code>TRACE</code> requests.\nRoute requests with the given handler regardless of the …\nRoute requests to the given service regardless of its …\nRoute <code>DELETE</code> requests to the given handler.\nChain an additional handler that will only accept <code>DELETE</code> …\nRoute <code>DELETE</code> requests to the given service.\nChain an additional service that will only accept <code>DELETE</code> …\nAdd a fallback <code>Handler</code> to the router.\nAdd a fallback service to the router.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFuture types.\nRoute <code>GET</code> requests to the given handler.\nChain an additional handler that will only accept <code>GET</code> …\nRoute <code>GET</code> requests to the given service.\nChain an additional service that will only accept <code>GET</code> …\nApply a <code>HandleErrorLayer</code>.\nRoute <code>HEAD</code> requests to the given handler.\nChain an additional handler that will only accept <code>HEAD</code> …\nRoute <code>HEAD</code> requests to the given service.\nChain an additional service that will only accept <code>HEAD</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the router into a <code>MakeService</code>.\nConvert the router into a <code>MakeService</code> which stores …\nApply a <code>tower::Layer</code> to all routes in the router.\nMerge two routers into one.\nRoute to services and handlers based on HTTP methods.\nCreate a default <code>MethodRouter</code> that will respond with …\nRoute requests with the given method to the handler.\nChain an additional handler that will accept requests …\nRoute requests with the given method to the service.\nChain an additional service that will accept requests …\nRoute <code>OPTIONS</code> requests to the given handler.\nChain an additional handler that will only accept <code>OPTIONS</code> …\nRoute <code>OPTIONS</code> requests to the given service.\nChain an additional service that will only accept <code>OPTIONS</code> …\nPerforms the OR operation between the <code>MethodFilter</code> in <code>self</code> …\nRoute <code>PATCH</code> requests to the given handler.\nChain an additional handler that will only accept <code>PATCH</code> …\nRoute <code>PATCH</code> requests to the given service.\nChain an additional service that will only accept <code>PATCH</code> …\nRoute <code>POST</code> requests to the given handler.\nChain an additional handler that will only accept <code>POST</code> …\nRoute <code>POST</code> requests to the given service.\nChain an additional service that will only accept <code>POST</code> …\nRoute <code>PUT</code> requests to the given handler.\nChain an additional handler that will only accept <code>PUT</code> …\nRoute <code>PUT</code> requests to the given service.\nChain an additional service that will only accept <code>PUT</code> …\nApply a <code>tower::Layer</code> to the router that will only run if …\nRoute <code>TRACE</code> requests to the given handler.\nChain an additional handler that will only accept <code>TRACE</code> …\nRoute <code>TRACE</code> requests to the given service.\nChain an additional service that will only accept <code>TRACE</code> …\nProvide the state for the router.\nA <code>RouteFuture</code> that always yields a <code>Response</code>.\nResponse future for <code>IntoMakeService</code>.\nResponse future for <code>Route</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA <code>Service</code> that accepts requests based on a <code>MethodFilter</code> and\nRoute requests with the given handler regardless of the …\nRoute requests to the given service regardless of its …\nRoute <code>DELETE</code> requests to the given handler.\nRoute <code>DELETE</code> requests to the given service.\nRoute <code>GET</code> requests to the given handler.\nRoute <code>GET</code> requests to the given service.\nRoute <code>HEAD</code> requests to the given handler.\nRoute <code>HEAD</code> requests to the given service.\nRoute requests with the given method to the handler.\nRoute requests with the given method to the service.\nRoute <code>OPTIONS</code> requests to the given handler.\nRoute <code>OPTIONS</code> requests to the given service.\nRoute <code>PATCH</code> requests to the given handler.\nRoute <code>PATCH</code> requests to the given service.\nRoute <code>POST</code> requests to the given handler.\nRoute <code>POST</code> requests to the given service.\nRoute <code>PUT</code> requests to the given handler.\nRoute <code>PUT</code> requests to the given service.\nRoute <code>TRACE</code> requests to the given handler.\nRoute <code>TRACE</code> requests to the given service.\nAn incoming stream.\nFuture returned by <code>serve</code>.\nServe future with graceful shutdown enabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the local address that this stream is bound to.\nReturns the remote address that this stream is bound to.\nServe the service with the supplied listener.\nPrepares a server to handle graceful shutdown when the …\nAsynchronous file and standard stream adaptation.\nTraits, helpers, and type definitions for asynchronous I/O …\nWaits on multiple concurrent branches, returning when <strong>all</strong> …\nMarks async function to be executed by the selected …\nTCP/UDP/Unix bindings for <code>tokio</code>.\nPins a value on the stack.\nAn implementation of asynchronous process management for …\nThe Tokio runtime.\nWaits on multiple concurrent branches, returning when the …\nAsynchronous signal handling for Tokio.\nSpawns a new asynchronous task, returning a <code>JoinHandle</code> for …\nDue to the <code>Stream</code> trait’s inclusion in <code>std</code> landing later …\nSynchronization primitives for use in asynchronous …\nAsynchronous green-threads.\nDeclares a new task-local key of type <code>tokio::task::LocalKey</code>…\nMarks async function to be executed by runtime, suitable …\nUtilities for tracking time.\nWaits on multiple concurrent branches, returning when <strong>all</strong> …\nA builder for creating directories in various manners.\nEntries returned by the <code>ReadDir</code> stream.\nA reference to an open file on the filesystem.\nOptions and flags which can be used to configure how a …\nReads the entries in a directory.\nSets the option for the append mode.\nReturns the canonical, absolute form of a path with all …\nCopies the contents of one file to another. This function …\nOpens a file in write-only mode.\nCreates the specified directory with the configured …\nSets the option for creating a new file.\nCreates a new, empty directory at the provided path.\nRecursively creates a directory and all of its parent …\nSets the option to always create a new file.\nPasses custom flags to the <code>flags</code> argument of <code>open</code>.\nReturns the bare file name of this directory entry without …\nReturns the file type for the file that this entry points …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>std::fs::File</code> to a <code>tokio::fs::File</code>.\nCreates a new hard link on the filesystem.\nReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDestructures <code>File</code> into a <code>std::fs::File</code>. This function is …\nGiven a path, queries the file system to get information …\nQueries metadata about the underlying file.\nReturns the metadata for the file that this entry points …\nSets the mode to create new directories with.\nSets the mode bits that a new file will be created with.\nCreates a new set of options with default mode/security …\nCreates a blank new set of options ready for configuration.\nReturns the next entry in the directory stream.\nAttempts to open a file in read-only mode.\nOpens a file at <code>path</code> with the options specified by <code>self</code>.\nReturns a new <code>OpenOptions</code> object.\nReturns the full path to the file that this entry …\nPolls for the next directory entry in the stream.\nReads the entire contents of a file into a bytes vector.\nSets the option for read access.\nReturns a stream over the entries within a directory.\nReads a symbolic link, returning the file that the link …\nCreates a future which will open a file for reading and …\nIndicates whether to create directories recursively …\nRemoves an existing, empty directory.\nRemoves a directory at this path, after removing all its …\nRemoves a file from the filesystem.\nRenames a file or directory to a new name, replacing the …\nTruncates or extends the underlying file, updating the …\nSet the maximum buffer size for the underlying <code>AsyncRead</code> / …\nChanges the permissions found on a file or a directory.\nChanges the permissions on the underlying file.\nCreates a new symbolic link on the filesystem.\nQueries the file system metadata for a path.\nAttempts to sync all OS-internal metadata to disk.\nThis function is similar to <code>sync_all</code>, except that it may …\nSets the option for truncating a previous file.\nCreates a new <code>File</code> instance that shares the same …\nReturns <code>Ok(true)</code> if the path points at an existing entity.\nTries to immediately destructure <code>File</code> into a <code>std::fs::File</code>.\nCreates a future that will open a file for writing and …\nSets the option for write access.\nReturns a <code>Ready</code> representing readiness for all operations.\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nProgram argument list too long.\nReads bytes asynchronously.\nAn extension trait which adds utility methods to …\nReads bytes from a source.\nReads bytes from a source.\nSeek bytes asynchronously.\nAn extension trait that adds utility methods to <code>AsyncSeek</code> …\nWrites bytes asynchronously.\nWrites bytes to a sink.\nThe operation failed because a pipe was closed.\nThe <code>BufReader</code> struct adds buffering to any reader.\nWraps a type that is <code>AsyncWrite</code> and <code>AsyncRead</code>, and buffers …\nWraps a writer and buffers its output.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nCross-device or cross-filesystem (hard) link or rename.\nSets the offset to the current position plus the specified …\nDeadlock (avoided).\nA non-empty directory was specified where an empty …\nA bidirectional pipe to read and write bytes in memory.\nReturns the empty <code>Ready</code> set.\nInterest in error events.\nReturns a <code>Ready</code> representing error readiness.\n<code>Empty</code> ignores any data written via <code>AsyncWrite</code>, and will …\nSets the offset to the size of this object plus the …\nContains the error value\nThe error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…\nA list specifying general categories of I/O error.\nExecutable file is busy.\nFile larger than allowed or supported.\nLoop in the filesystem or IO subsystem; often, too many …\nFilesystem quota was exceeded.\nThe remote host is not reachable.\nReadiness event interest.\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA filename was invalid.\nA parameter was incorrect.\nThe filesystem object is, unexpectedly, a directory.\nJoins two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> …\nReads lines from an <code>AsyncBufRead</code>.\nThe system’s networking is down.\nThe network containing the remote host is not reachable.\nA filesystem object is, unexpectedly, not a directory.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nSeek on unseekable file.\nContains the success value\nA custom error that does not fall under any other I/O …\nAn operation could not be completed, because it failed to …\nReturns a <code>Interest</code> set representing priority completion …\nReturns a <code>Ready</code> representing priority readiness.\nThe operation lacked the necessary privileges to complete.\nInterest in all readable events.\nReturns a <code>Ready</code> representing readable readiness.\nReturns a <code>Ready</code> representing read closed readiness.\nA wrapper around a byte buffer that is incrementally …\nThe readable half of a value returned from <code>split</code>.\nThe filesystem or storage medium is read-only, but a write …\nDescribes the readiness state of an I/O resources.\nAn async reader which yields one byte over and over and …\nResource is busy.\nA specialized <code>Result</code> type for I/O operations.\nEnumeration of possible methods to seek within an I/O …\nAn async writer which will move data into the void.\nSplitter for the <code>split</code> method.\nStale network file handle.\nSets the offset to the provided number of bytes.\nA handle to the standard error stream of a process.\nA handle to the standard input stream of a process.\nA handle to the standard output stream of a process.\nThe underlying storage (typically, a filesystem) is full.\nStream for the <code>take</code> method.\nThe I/O operation’s timeout expired, causing it to be …\nToo many (hard) links to the same filesystem object.\nAn error returned when an operation could not be completed …\nThis operation is unsupported on this platform.\nInterest in all writable events.\nReturns a <code>Ready</code> representing writable readiness.\nReturns a <code>Ready</code> representing write closed readiness.\nThe operation needs to block to complete, but the blocking …\nThe writable half of a value returned from <code>split</code>.\nAn error returned when an operation could not be completed …\nAdd together two <code>Interest</code> values.\nAdvances the size of the filled region of the buffer.\nAsserts that the first <code>n</code> unfilled bytes of the buffer are …\nReturns a reference to the internally buffered data.\nReturns a reference to the internally buffered data.\nReturns the total capacity of the buffer.\nCreates a new <code>AsyncRead</code> instance that chains this stream …\nClears the buffer, resetting the filled region to empty.\nTells this buffer that <code>amt</code> bytes have been consumed from …\nTells this buffer that <code>amt</code> bytes have been consumed from …\nAsynchronously copies the entire contents of a reader into …\nCopies data in both directions between <code>a</code> and <code>b</code>.\nAsynchronously copies the entire contents of a reader into …\nAttempt to downcast the inner error to <code>E</code> if any.\nCreate a new pair of <code>DuplexStream</code>s that act like a pair of …\nCreates a value that is always at EOF for reads, and …\nReturns the contents of the internal buffer, filling it …\nReturns a shared reference to the filled portion of the …\nReturns a mutable reference to the filled portion of the …\nFlushes this output stream, ensuring that all …\nShows a human-readable description of the <code>ErrorKind</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>ErrorKind</code> into an <code>Error</code>.\nConverts <code>TryReserveError</code> to an error with …\nReturns the argument unchanged.\nConvert a <code>serde_json::Error</code> into an <code>io::Error</code>.\nConverts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new instance of an <code>Error</code> from a particular OS …\nReturns a mutable reference to the inner error wrapped by …\nGets a mutable reference to the underlying reader.\nObtains a mutable reference to the underlying reader.\nGets a mutable reference to the underlying writer.\nGets a mutable reference to the underlying I/O object.\nGets a mutable reference to the underlying reader.\nGets a pinned mutable reference to the underlying reader.\nGets a pinned mutable reference to the underlying writer.\nGets a pinned mutable reference to the underlying I/O …\nGets a pinned mutable reference to the underlying reader.\nReturns a reference to the inner error wrapped by this …\nGets a reference to the underlying reader.\nObtains a reference to the underlying reader.\nGets a reference to the underlying writer.\nGets a reference to the underlying I/O object.\nGets a reference to the underlying reader.\nReturns a mutable reference to the unfilled part of the …\nReturns a mutable reference to the first <code>n</code> bytes of the …\nReturns a shared reference to the initialized portion of …\nReturns a mutable reference to the initialized portion of …\nReturns a mutable reference to the entire buffer, without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplits this <code>Join</code> back into its <code>AsyncRead</code> and <code>AsyncWrite</code> …\nConsumes the <code>Error</code>, returning its inner error (if any).\nConsumes the <code>Take</code>, returning the wrapped reader.\nUnwraps this <code>Lines&lt;R&gt;</code>, returning the underlying reader.\nConsumes this <code>BufWriter</code>, returning the underlying writer.\nConsumes this <code>BufStream</code>, returning the underlying I/O …\nConsumes this <code>BufReader</code>, returning the underlying reader.\nReturns true if <code>Ready</code> is the empty set.\nReturns true if the value includes error interest.\nReturns <code>true</code> if the value includes error <code>readiness</code>.\nChecks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from …\nChecks if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …\nReturns true if the value includes priority interest.\nReturns <code>true</code> if the value includes priority <code>readiness</code>.\nReturns <code>true</code> if the value includes read-closed <code>readiness</code>.\nReturns true if the value includes readable interest.\nReturns <code>true</code> if the value includes <code>readable</code>.\nReturns true if the value includes writable interest.\nReturns <code>true</code> if the value includes writable <code>readiness</code>.\nReturns <code>true</code> if the value includes write-closed <code>readiness</code>.\nDetermines if this writer has an efficient …\nJoin two values implementing <code>AsyncRead</code> and <code>AsyncWrite</code> into …\nReturns the corresponding <code>ErrorKind</code> for this error.\nReturns an error representing the last OS error which …\nReturns the remaining number of bytes that can be read …\nReturns a stream over the lines of this reader. This …\nCreates a new <code>ReadBuf</code> from a fully initialized buffer.\nCreates a new I/O error from a known kind of error as well …\nCreates a new <code>BufWriter</code> with a default buffer capacity. …\nWraps a type in both <code>BufWriter</code> and <code>BufReader</code>.\nCreates a new <code>BufReader</code> with a default buffer capacity. …\nReturns the next line in the stream.\nReturns the next segment in the stream.\nCreates a new I/O error from an arbitrary error payload.\nWaits for a seek operation to complete.\nAttempts to return the contents of the internal buffer, …\nAttempts to flush the object, ensuring that any buffered …\nPolls for the next line in the stream.\nPolls for the next segment in the stream.\nAttempts to read from the <code>AsyncRead</code> into <code>buf</code>.\nInitiates or attempts to shut down this writer, returning …\nAttempt to write bytes from <code>buf</code> into the object.\nLike <code>poll_write</code>, except that it writes from a slice of …\nAppends data to the buffer, advancing the written position …\nReturns the OS error that this error represents (if any).\nPulls some bytes from this source into the specified …\nPulls some bytes from this source into the specified …\nReads the exact number of bytes required to fill <code>buf</code>.\nReads an 32-bit floating point type in big-endian order …\nReads an 32-bit floating point type in little-endian order …\nReads an 64-bit floating point type in big-endian order …\nReads an 64-bit floating point type in little-endian order …\nReads an signed 128-bit integer in big-endian order from …\nReads an signed 128-bit integer in little-endian order …\nReads a signed 16-bit integer in big-endian order from the …\nReads a signed 16-bit integer in little-endian order from …\nReads a signed 32-bit integer in big-endian order from the …\nReads a signed 32-bit integer in little-endian order from …\nReads an signed 64-bit integer in big-endian order from the\nReads an signed 64-bit integer in little-endian order from …\nReads a signed 8 bit integer from the underlying reader.\nReads all bytes until a newline (the 0xA byte) is reached, …\nReads all bytes until EOF in this source, placing them …\nReads all bytes until EOF in this source, appending them …\nReads an unsigned 128-bit integer in big-endian order from …\nReads an unsigned 128-bit integer in little-endian order …\nReads an unsigned 16-bit integer in big-endian order from …\nReads an unsigned 16-bit integer in little-endian order …\nReads an unsigned 32-bit integer in big-endian order from …\nReads an unsigned 32-bit integer in little-endian order …\nReads an unsigned 64-bit integer in big-endian order from …\nReads an unsigned 64-bit integer in little-endian order …\nReads an unsigned 8 bit integer from the underlying reader.\nReads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …\nReturns a reference to the inner reader.\nReturns a mutable reference to the inner reader.\nReturns a pinned mutable reference to the inner reader.\nReturns the number of bytes at the end of the slice that …\nRemove <code>Interest</code> from <code>self</code>.\nCreates an instance of an async reader that infinitely …\nCreates a future which will rewind to the beginning of the …\nCreates a future which will seek an IO object, and then …\nSets the size of the filled region of the buffer.\nSets the number of bytes that can be read before this …\nShuts down the output stream, ensuring that the value can …\nCreates an instance of an async writer which will …\nSplits a single value implementing <code>AsyncRead + AsyncWrite</code> …\nReturns a stream of the contents of this reader split on …\nAttempts to seek to an offset, in bytes, in a stream.\nConstructs a new handle to the standard error of the …\nConstructs a new handle to the standard input of the …\nConstructs a new handle to the standard output of the …\nCreates a future which will return the current seek …\nReturns a new <code>ReadBuf</code> comprised of the unfilled section up …\nCreates an adaptor which reads at most <code>limit</code> bytes from it.\nReturns a mutable reference to the unfilled part of the …\nCreates a new <code>ReadBuf</code> from a fully uninitialized buffer.\nAsynchronous IO structures specific to Unix-like operating …\nReunites with a previously split <code>WriteHalf</code>.\nCreates a new <code>BufWriter</code> with the specified buffer capacity.\nCreates a <code>BufStream</code> with the specified <code>BufReader</code> capacity …\nCreates a new <code>BufReader</code> with the specified buffer capacity.\nWrites a buffer into this writer, returning how many bytes …\nAttempts to write an entire buffer into this writer.\nAttempts to write an entire buffer into this writer.\nWrites a buffer into this writer, advancing the buffer’s …\nWrites an 32-bit floating point type in big-endian order …\nWrites an 32-bit floating point type in little-endian …\nWrites an 64-bit floating point type in big-endian order …\nWrites an 64-bit floating point type in little-endian …\nWrites an signed 128-bit integer in big-endian order to the\nWrites an signed 128-bit integer in little-endian order to …\nWrites a signed 16-bit integer in big-endian order to the …\nWrites a signed 16-bit integer in little-endian order to …\nWrites a signed 32-bit integer in big-endian order to the …\nWrites a signed 32-bit integer in little-endian order to …\nWrites an signed 64-bit integer in big-endian order to the …\nWrites an signed 64-bit integer in little-endian order to …\nWrites a signed 8-bit integer to the underlying writer.\nWrites an unsigned 128-bit integer in big-endian order to …\nWrites an unsigned 128-bit integer in little-endian order …\nWrites an unsigned 16-bit integer in big-endian order to …\nWrites an unsigned 16-bit integer in little-endian order …\nWrites an unsigned 32-bit integer in big-endian order to …\nWrites an unsigned 32-bit integer in little-endian order …\nWrites an unsigned 64-bit integer in big-endian order to …\nWrites an unsigned 64-bit integer in little-endian order …\nWrites an unsigned 8-bit integer to the underlying writer.\nLike <code>write</code>, except that it writes from a slice of buffers.\nReturns a reference to the inner writer.\nReturns a mutable reference to the inner writer.\nReturns a pinned mutable reference to the inner writer.\nAssociates an IO object backed by a Unix file descriptor …\nRepresents an IO-ready event detected on a particular file …\nRepresents an IO-ready event detected on a particular file …\nError returned by <code>try_new</code> or <code>try_with_interest</code>.\nThe error type returned by <code>try_io</code>.\nReads or writes from the file descriptor using a …\nReads or writes from the file descriptor using a …\nIndicates to tokio that the file descriptor is no longer …\nIndicates to tokio that the file descriptor is no longer …\nIndicates to tokio that the file descriptor no longer has …\nIndicates to tokio that the file descriptor no longer has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a shared reference to the backing object of the …\nReturns a shared reference to the backing object of the …\nReturns a mutable reference to the backing object of the …\nReturns a mutable reference to the backing object of this …\nReturns a mutable reference to the inner <code>AsyncFd</code>.\nReturns a shared reference to the backing object of this …\nReturns a shared reference to the inner <code>AsyncFd</code>.\nReturns a shared reference to the inner <code>AsyncFd</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeregisters this file descriptor and returns ownership of …\nReturns the original object passed to <code>try_new</code> or …\nCreates an <code>AsyncFd</code> backed by (and taking ownership of) an …\nPolls for read readiness.\nPolls for read readiness.\nPolls for write readiness.\nPolls for write readiness.\nWaits for the file descriptor to become readable, …\nWaits for the file descriptor to become readable, …\nWaits for any of the requested ready states, returning a …\nGet the <code>Ready</code> value associated with this guard.\nGet the <code>Ready</code> value associated with this guard.\nWaits for any of the requested ready states, returning a …\nThis method should be invoked when you intentionally want …\nThis method should be invoked when you intentionally want …\nPerforms the provided IO operation.\nPerforms the provided IO operation.\nCreates an <code>AsyncFd</code> backed by (and taking ownership of) an …\nCreates an <code>AsyncFd</code> backed by (and taking ownership of) an …\nCreates an <code>AsyncFd</code> backed by (and taking ownership of) an …\nWaits for the file descriptor to become writable, …\nWaits for the file descriptor to become writable, …\nA TCP socket server, listening for connections.\nA TCP socket that has not yet been converted to a <code>TcpStream</code>…\nA TCP stream between a local and a remote socket.\nConverts or resolves without blocking to one or more …\nA UDP socket.\nAn I/O object representing a Unix datagram socket.\nA Unix socket which can accept connections from other Unix …\nA Unix socket that has not yet been converted to a …\nA structure representing a connected Unix socket.\nAccepts a new incoming connection from this listener.\nAccepts a new incoming connection to this listener.\nReads or writes from the socket using a user-provided IO …\nReads or writes from the socket using a user-provided IO …\nReads or writes from the socket using a user-provided IO …\nReads or writes from the socket using a user-provided IO …\nCreates a new <code>TcpListener</code>, which will be bound to the …\nBinds the socket to the given address.\nThis function will create a new UDP socket and attempt to …\nCreates a new <code>UnixDatagram</code> bound to the specified path.\nCreates a new <code>UnixListener</code> bound to the specified path.\nBinds the socket to the given address.\nSets the value for the <code>SO_BINDTODEVICE</code> option on this …\nSets the value for the <code>SO_BINDTODEVICE</code> option on this …\nGets the value of the <code>SO_BROADCAST</code> option for this socket.\nEstablishes a TCP connection with a peer at the specified …\nOpens a TCP connection to a remote host.\nConnects the UDP socket setting the default destination …\nConnects the socket to the specified address.\nEstablishes a Unix connection with a peer at the specified …\nConnects to the socket named by <code>path</code>.\nConverts the socket into a <code>UnixDatagram</code>.\nGets the value for the <code>SO_BINDTODEVICE</code> option on this …\nGets the value for the <code>SO_BINDTODEVICE</code> option on this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>RawFd</code> to a <code>TcpSocket</code>.\nCreates new <code>TcpListener</code> from a <code>std::net::TcpListener</code>.\nCreates new <code>TcpStream</code> from a <code>std::net::TcpStream</code>.\nCreates new <code>UdpSocket</code> from a previously bound …\nCreates new <code>UnixDatagram</code> from a …\nCreates new <code>UnixListener</code> from a …\nCreates new <code>UnixStream</code> from a …\nConverts a <code>std::net::TcpStream</code> into a <code>TcpSocket</code>. The …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSplits a <code>TcpStream</code> into a read half and a write half, …\nSplits a <code>UnixStream</code> into a read half and a write half, …\nTurns a <code>tokio::net::TcpListener</code> into a …\nTurns a <code>tokio::net::TcpStream</code> into a <code>std::net::TcpStream</code>.\nTurns a <code>tokio::net::UdpSocket</code> into a <code>std::net::UdpSocket</code>.\nTurns a <code>tokio::net::UnixDatagram</code> into a …\nTurns a <code>tokio::net::UnixListener</code> into a …\nTurns a <code>tokio::net::UnixStream</code> into a …\nExecutes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.\nGets the value of the <code>SO_KEEPALIVE</code> option on this socket.\nExecutes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.\nExecutes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.\nReads the linger duration for this socket by getting the …\nReads the linger duration for this socket by getting the …\nConverts the socket into a <code>TcpListener</code>.\nConverts the socket into a <code>UnixListener</code>.\nReturns the local address that this listener is bound to.\nGets the local address of this socket.\nReturns the local address that this stream is bound to.\nReturns the local address that this socket is bound to.\nReturns the local address that this socket is bound to.\nReturns the local socket address of this listener.\nReturns the socket address of the local half of this …\nPerforms a DNS resolution.\nGets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nGets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nGets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nCreates a new Unix datagram socket.\nCreates a new Unix stream socket.\nCreates a new socket configured for IPv4.\nCreates a new socket configured for IPv6.\nGets the value of the <code>TCP_NODELAY</code> option on this socket.\nGets the value of the <code>TCP_NODELAY</code> option on this socket.\nCreates an unnamed pair of connected sockets.\nCreates an unnamed pair of connected sockets.\nReceives data on the socket from the remote address to …\nReceives data from the socket, without removing it from …\nRetrieve the sender of the data at the head of the input …\nReturns the remote address that this stream is connected …\nReturns the socket address of the remote peer this socket …\nReturns the address of this socket’s peer.\nReturns the socket address of the remote half of this …\nReturns effective credentials of the process which called …\nPolls to accept a new incoming connection to this listener.\nPolls to accept a new incoming connection to this listener.\nAttempts to receive data on the socket, without removing …\nReceives data from the socket, without removing it from …\nRetrieve the sender of the data at the head of the input …\nPolls for read readiness.\nPolls for read readiness.\nAttempts to receive a single datagram message on the …\nAttempts to receive a single datagram message on the …\nAttempts to receive a single datagram on the socket.\nAttempts to receive a single datagram on the specified …\nPolls for read/receive readiness.\nPolls for read/receive readiness.\nAttempts to send data on the socket to the remote address …\nAttempts to send data on the socket to the remote address …\nPolls for write/send readiness.\nPolls for write/send readiness.\nAttempts to send data on the socket to a given address.\nAttempts to send data to the specified address.\nPolls for write readiness.\nPolls for write readiness.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nReceives a single datagram message on the socket from the …\nReceives data from the socket.\nReceives a single datagram message on the socket from the …\nReceives data from the socket from the address to which it …\nReceives a single datagram message on the socket, …\nReceives from the socket, advances the buffer’s internal …\nReturns the size of the TCP receive buffer for this socket.\nReceives a single datagram message on the socket. On …\nReceives data from the socket.\nRetrieves the value set for <code>SO_REUSEADDR</code> on this socket.\nAllows the socket to bind to an in-use port. Only …\nSends data on the socket to the remote address that the …\nSends data on the socket to the socket’s peer.\nReturns the size of the TCP send buffer for this socket.\nSends data on the socket to the given address. On success, …\nSends data on the socket to the specified address.\nSets the value of the <code>SO_BROADCAST</code> option for this socket.\nSets value for the <code>SO_KEEPALIVE</code> option on this socket.\nSets the linger duration of this socket by setting the …\nSets the linger duration of this socket by setting the …\nSets the value of the <code>IP_MULTICAST_LOOP</code> option for this …\nSets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …\nSets the value of the <code>IP_MULTICAST_TTL</code> option for this …\nSets the value of the <code>TCP_NODELAY</code> option on this socket.\nSets the value of the <code>TCP_NODELAY</code> option on this socket.\nSets the size of the TCP receive buffer on this socket.\nAllows the socket to bind to an in-use address.\nAllows the socket to bind to an in-use port. Only …\nSets the size of the TCP send buffer on this socket.\nSets the value for the <code>IP_TOS</code> option on this socket.\nSets the value for the <code>IP_TOS</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nSets the value for the <code>IP_TTL</code> option on this socket.\nShuts down the read, write, or both halves of this …\nSplits a <code>TcpStream</code> into a read half and a write half, …\nSplits a <code>UnixStream</code> into a read half and a write half, …\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nReturns the value of the <code>SO_ERROR</code> option.\nTCP utility types.\nGets the value of the <code>IP_TOS</code> option for this socket.\nGets the value of the <code>IP_TOS</code> option for this socket.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the Tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nConsumes stream, returning the tokio I/O object.\nTries to read or write from the socket using a …\nTries to read or write from the socket using a …\nTries to read or write from the socket using a …\nTries to read or write from the socket using a …\nTries to receive data on the socket without removing it …\nTry to retrieve the sender of the data at the head of the …\nTries to read data from the stream into the provided …\nTry to read data from the stream into the provided buffer, …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to receive a single datagram message on the socket …\nTries to receive a datagram from the peer without waiting.\nTries to receive data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to receive a single datagram message on the socket. …\nTries to receive data from the socket without waiting.\nTries to receive a single datagram message on the socket. …\nTries to receive data from the socket without waiting.\nTries to send data on the socket to the remote address to …\nTries to send a datagram to the peer without waiting.\nTries to send data on the socket to the given address, but …\nTries to send a datagram to the peer without waiting.\nTry to write a buffer to the stream, returning how many …\nTries to write a buffer to the stream, returning how many …\nTries to write several buffers to the stream, returning …\nTries to write several buffers to the stream, returning …\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nGets the value of the <code>IP_TTL</code> option for this socket.\nCreates a new <code>UnixDatagram</code> which is not bound to any …\nUnix specific network types.\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nOwned read half of a <code>TcpStream</code>, created by <code>into_split</code>.\nOwned write half of a <code>TcpStream</code>, created by <code>into_split</code>.\nBorrowed read half of a <code>TcpStream</code>, created by <code>split</code>.\nError indicating that two halves were not from the same …\nBorrowed write half of a <code>TcpStream</code>, created by <code>split</code>.\nDestroys the write half, but don’t close the write half …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the local address that this stream is bound to.\nReturns the local address that this stream is bound to.\nReturns the local address that this stream is bound to.\nReturns the local address that this stream is bound to.\nReceives data on the socket from the remote address to …\nReceives data on the socket from the remote address to …\nReturns the remote address that this stream is connected …\nReturns the remote address that this stream is connected …\nReturns the remote address that this stream is connected …\nReturns the remote address that this stream is connected …\nAttempts to receive data on the socket, without removing …\nAttempt to receive data on the socket, without removing …\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nAttempts to put the two halves of a <code>TcpStream</code> back …\nAttempts to put the two halves of a <code>TcpStream</code> back …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to write a buffer to the stream, returning how many …\nTries to write a buffer to the stream, returning how many …\nTries to write several buffers to the stream, returning …\nTries to write several buffers to the stream, returning …\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nOwned read half of a <code>UnixStream</code>, created by <code>into_split</code>.\nOwned write half of a <code>UnixStream</code>, created by <code>into_split</code>.\nBorrowed read half of a <code>UnixStream</code>, created by <code>split</code>.\nError indicating that two halves were not from the same …\nAn address associated with a Tokio Unix socket.\nCredentials of a process.\nBorrowed write half of a <code>UnixStream</code>, created by <code>split</code>.\nReturns the contents of this address if it is a <code>pathname</code> …\nDestroys the write half, but don’t close the write half …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets GID (group ID) of the process.\nA type representing user ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the address is unnamed.\nReturns the socket address of the local half of this …\nReturns the socket address of the local half of this …\nReturns the socket address of the local half of this …\nReturns the socket address of the local half of this …\nReturns the socket address of the remote half of this …\nReturns the socket address of the remote half of this …\nReturns the socket address of the remote half of this …\nReturns the socket address of the remote half of this …\nGets PID (process ID) of the process.\nA type representing group ID.\nUnix pipe types.\nWaits for the socket to become readable.\nWaits for the socket to become readable.\nWait for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nAttempts to put the two halves of a <code>UnixStream</code> back …\nAttempts to put the two halves of a <code>UnixStream</code> back …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to read data from the stream into the provided …\nTries to write a buffer to the stream, returning how many …\nTries to write a buffer to the stream, returning how many …\nTries to write several buffers to the stream, returning …\nTries to write several buffers to the stream, returning …\nGets UID (user ID) of the process.\nA type representing process and process group IDs.\nWaits for the socket to become writable.\nWaits for the socket to become writable.\nOptions and flags which can be used to configure how a …\nReading end of a Unix pipe.\nWriting end of a Unix pipe.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Sender</code> from a <code>File</code>.\nCreates a new <code>Receiver</code> from a <code>File</code>.\nCreates a new <code>Sender</code> from a <code>File</code> without checking pipe …\nCreates a new <code>Receiver</code> from a <code>File</code> without checking pipe …\nCreates a new <code>Sender</code> from an <code>OwnedFd</code>.\nCreates a new <code>Receiver</code> from an <code>OwnedFd</code>.\nCreates a new <code>Sender</code> from an <code>OwnedFd</code> without checking pipe …\nCreates a new <code>Receiver</code> from an <code>OwnedFd</code> without checking …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the pipe into an <code>OwnedFd</code> in blocking mode.\nConverts the pipe into an <code>OwnedFd</code> in blocking mode.\nConverts the pipe into an <code>OwnedFd</code> in nonblocking mode.\nConverts the pipe into an <code>OwnedFd</code> in nonblocking mode.\nCreates a blank new set of options ready for configuration.\nCreates a <code>Receiver</code> from a FIFO file with the options …\nCreates a <code>Sender</code> from a FIFO file with the options …\nCreates a new anonymous Unix pipe.\nPolls for read readiness.\nPolls for write readiness.\nSets the option for read-write access.\nWaits for the pipe to become readable.\nWaits for any of the requested ready states.\nWaits for any of the requested ready states.\nTries to read data from the pipe into the provided buffer, …\nTries to read data from the pipe into the provided buffer, …\nTries to read data from the pipe into the provided …\nTries to write a buffer to the pipe, returning how many …\nTries to write several buffers to the pipe, returning how …\nSets the option to skip the check for FIFO file type.\nWaits for the pipe to become writable.\nRepresentation of a child process spawned onto an event …\nThe standard error stream for spawned children.\nThe standard input stream for spawned children.\nThe standard output stream for spawned children.\nThis structure mimics the API of <code>std::process::Command</code> …\nAdds an argument to pass to the program.\nSets executable argument.\nAdds multiple arguments to pass to the program.\nCheaply convert to a <code>&amp;std::process::Command</code> for places …\nSets the working directory for the child process.\nInserts or updates an environment variable mapping.\nClears the entire environment map for the child process.\nRemoves an environment variable mapping.\nAdds or updates multiple environment variable mappings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an asynchronous <code>ChildStdin</code> from a synchronous one.\nCreates an asynchronous <code>ChildStdout</code> from a synchronous one.\nCreates an asynchronous <code>ChildStderr</code> from a synchronous one.\nSimilar to <code>uid</code> but sets the group ID of the child process. …\nReturns the OS-assigned process identifier associated with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into <code>OwnedFd</code>.\nConvert into <code>OwnedFd</code>.\nConvert into <code>OwnedFd</code>.\nForces the child to exit.\nControls whether a <code>kill</code> operation should be invoked on a …\nConstructs a new <code>Command</code> for launching the program at path …\nExecutes the command as a child process, waiting for it to …\nSchedules a closure to be run just before the <code>exec</code> …\nExecutes the command as a child process, returning a …\nAttempts to force the child to exit, but does not wait for …\nExecutes the command as a child process, waiting for it to …\nSets configuration for the child process’s standard …\nThe handle for reading from the child’s standard error …\nSets configuration for the child process’s standard …\nThe handle for writing to the child’s standard input …\nSets configuration for the child process’s standard …\nThe handle for reading from the child’s standard output …\nAttempts to collect the exit status of the child if it has …\nSets the child process’s user ID. This translates to a …\nWaits for the child to exit completely, returning the …\nReturns a future that will resolve to an <code>Output</code>, …\nBuilds Tokio Runtime with custom configuration values.\nThe flavor that executes all tasks on the current thread.\nRuntime context guard.\nHandle to the runtime.\nThe flavor that executes tasks across multiple threads.\nThe Tokio runtime.\nThe flavor of a <code>Runtime</code>.\nError returned by <code>try_current</code> when no Runtime has been …\nRuns a future to completion on this <code>Handle</code>’s associated …\nRuns a future to completion on the Tokio runtime. This is …\nCreates the configured <code>Runtime</code>.\nReturns a <code>Handle</code> view over the currently running <code>Runtime</code>.\nEnables both I/O and time drivers.\nEnables the I/O driver.\nEnables the time driver.\nEnters the runtime context. This allows you to construct …\nEnters the runtime context.\nSets the number of scheduler ticks after which the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the number of scheduler ticks after which the …\nReturns a handle to the runtime’s spawner.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the call failed because there is currently …\nReturns true if the call failed because the Tokio context …\nSpecifies the limit for additional threads spawned by the …\nEnables the I/O driver and configures the max number of …\nCreates a new runtime instance with default configuration …\nReturns a new builder with the current thread scheduler …\nReturns a new builder with the multi thread scheduler …\nExecutes function <code>f</code> just before a thread is parked (goes …\nExecutes function <code>f</code> after each thread is started but …\nExecutes function <code>f</code> before each thread stops.\nExecutes function <code>f</code> just after a thread unparks (starts …\nReturns the flavor of the current <code>Runtime</code>.\nShuts down the runtime, without waiting for any spawned …\nShuts down the runtime, waiting for at most <code>duration</code> for …\nSpawns a future onto the Tokio runtime.\nSpawns a future onto the Tokio runtime.\nRuns the provided function on an executor dedicated to …\nRuns the provided function on an executor dedicated to …\nSets a custom timeout for a thread in the blocking pool.\nSets name of threads spawned by the <code>Runtime</code>’s thread …\nSets a function used to generate the name of threads …\nSets the stack size (in bytes) for worker threads.\nReturns a Handle view over the currently running Runtime\nSets the number of worker threads the <code>Runtime</code> will use.\nCompletes when a “ctrl-c” notification is sent to the …\nUnix-specific types for signal handling.\nAn listener for receiving a particular type of OS signal.\nRepresents the specific kind of signal to listen for.\nRepresents the <code>SIGALRM</code> signal.\nGet the signal’s numeric value.\nRepresents the <code>SIGCHLD</code> signal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllows for listening to any valid OS signal.\nRepresents the <code>SIGHUP</code> signal.\nRepresents the <code>SIGINT</code> signal.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents the <code>SIGIO</code> signal.\nRepresents the <code>SIGPIPE</code> signal.\nPolls to receive the next signal notification event, …\nRepresents the <code>SIGQUIT</code> signal.\nReceives the next signal notification event.\nCreates a new listener which will receive notifications …\nRepresents the <code>SIGTERM</code> signal.\nRepresents the <code>SIGUSR1</code> signal.\nRepresents the <code>SIGUSR2</code> signal.\nRepresents the <code>SIGWINCH</code> signal.\nError returned from the <code>Semaphore::acquire</code> function.\nThe cell was already initialized when <code>OnceCell::set</code> was …\nA barrier enables multiple tasks to synchronize the …\nA <code>BarrierWaitResult</code> is returned by <code>wait</code> when all tasks in …\nThe semaphore has been closed and cannot issue new permits.\nThe cell is currently being initialized.\nThe maximum number of permits which a semaphore can hold. …\nA handle to a held <code>Mutex</code> that has had a function applied …\nAn asynchronous <code>Mutex</code>-like type.\nA handle to a held <code>Mutex</code>. The guard can be held across any …\nThe semaphore has no available permits.\nNotifies a single task to wake up.\nA thread-safe cell that can be written to only once.\nA owned handle to a held <code>Mutex</code> that has had a function …\nAn owned handle to a held <code>Mutex</code>.\nOwned RAII structure used to release the exclusive write …\nOwned RAII structure used to release the shared read …\nOwned RAII structure used to release the exclusive write …\nAn owned permit from the semaphore.\nAn asynchronous reader-writer lock.\nRAII structure used to release the exclusive write access …\nRAII structure used to release the shared read access of a …\nRAII structure used to release the exclusive write access …\nCounting semaphore performing asynchronous permit …\nA permit from the semaphore.\nErrors that can be returned from <code>OnceCell::set</code>.\nError returned from the <code>Semaphore::try_acquire</code> function.\nError returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> …\nAcquires a permit from the semaphore.\nAcquires <code>n</code> permits from the semaphore.\nAcquires <code>n</code> permits from the semaphore.\nAcquires a permit from the semaphore.\nAdds <code>n</code> new permits to the semaphore.\nReturns the current number of available permits.\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>RwLock</code> with shared read access.\nBlockingly locks this <code>RwLock</code> with exclusive write access.\nA multi-producer, multi-consumer broadcast queue. Each …\nCloses the semaphore.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a new empty <code>OnceCell</code> instance.\nCreate a new <code>Notify</code>, initialized without a permit.\nCreates a new semaphore with the initial number of permits.\nCreates a new <code>OnceCell</code> that contains the provided value.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nAtomically downgrades a write lock into a read lock …\nAtomically downgrades a write lock into a read lock …\nMakes a new <code>OwnedRwLockReadGuard</code> for a component of the …\nMakes a new <code>RwLockReadGuard</code> for a component of the locked …\nForgets the permit <strong>without</strong> releasing it back to the …\nForgets the permit <strong>without</strong> releasing it back to the …\nDecrease a semaphore’s permits by a maximum of <code>n</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNamed future types.\nReturns a reference to the value currently stored in the …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the value currently stored …\nGets the value currently in the <code>OnceCell</code>, or initialize it …\nGets the value currently in the <code>OnceCell</code>, or initialize it …\nReturns <code>true</code> if the <code>OnceCell</code> currently contains a value, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the mutex, returning the underlying data.\nConsumes the lock, returning the underlying data.\nTakes the value from the cell, destroying the cell in the …\nConverts this <code>OwnedRwLockWriteGuard</code> into an …\nConverts this <code>RwLockWriteGuard</code> into an …\nWhether <code>SetError</code> is <code>SetError::AlreadyInitializedError</code>.\nReturns true if the semaphore is closed\nWhether <code>SetError</code> is <code>SetError::InitializingError</code>\nReturns <code>true</code> if this task from wait is the “leader task…\nLocks this mutex, causing the current task to yield until …\nLocks this mutex, causing the current task to yield until …\nMakes a new <code>MappedMutexGuard</code> for a component of the locked …\nMakes a new <code>OwnedMappedMutexGuard</code> for a component of the …\nMakes a new <code>MappedMutexGuard</code> for a component of the locked …\nMakes a new <code>OwnedMappedMutexGuard</code> for a component of the …\nMakes a new <code>OwnedRwLockReadGuard</code> for a component of the …\nMakes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …\nMakes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …\nMakes a new <code>RwLockReadGuard</code> for a component of the locked …\nMakes a new <code>RwLockMappedWriteGuard</code> for a component of the …\nMakes a new <code>RwLockMappedWriteGuard</code> for a component of the …\nMerge two <code>SemaphorePermit</code> instances together, consuming …\nMerge two <code>OwnedSemaphorePermit</code> instances together, …\nA multi-producer, single-consumer queue for sending values …\nReturns a reference to the original <code>Mutex</code>.\nReturns a reference to the original <code>Arc&lt;Mutex&gt;</code>.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a new empty <code>OnceCell</code> instance.\nCreates a new barrier that can block a given number of …\nCreate a new <code>Notify</code>, initialized without a permit.\nCreates a new semaphore with the initial number of permits.\nCreates a new <code>OnceCell</code> that contains the provided value, …\nWait for a notification.\nNotifies a waiting task.\nNotifies all waiting tasks.\nA one-shot channel is used for sending a single message …\nLocks this <code>RwLock</code> with shared read access, causing the …\nLocks this <code>RwLock</code> with shared read access, causing the …\nReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.\nReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.\nReturns a reference to the original <code>Arc&lt;RwLock&gt;</code>.\nReturns the <code>Semaphore</code> from which this permit was acquired.\nSets the value of the <code>OnceCell</code> to the given value if the …\nTakes ownership of the current value, leaving the cell …\nTries to acquire a permit from the semaphore.\nTries to acquire <code>n</code> permits from the semaphore.\nTries to acquire <code>n</code> permits from the semaphore.\nTries to acquire a permit from the semaphore.\nAttempts to make a new <code>OwnedRwLockReadGuard</code> for a …\nAttempts to make a new <code>RwLockReadGuard</code> for a component of …\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to make a new <code>MappedMutexGuard</code> for a component of …\nAttempts to make a new <code>OwnedMappedMutexGuard</code> for a …\nAttempts to make a new <code>MappedMutexGuard</code> for a component of …\nAttempts to make a new <code>OwnedMappedMutexGuard</code> for a …\nAttempts to make a new <code>OwnedRwLockReadGuard</code> for a …\nAttempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …\nAttempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …\nAttempts to make a new <code>RwLockReadGuard</code> for a component of …\nAttempts to make a new <code>RwLockMappedWriteGuard</code> for a …\nAttempts to make a new <code>RwLockMappedWriteGuard</code> for a …\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nDoes not resolve until all tasks have rendezvoused here.\nA multi-producer, multi-consumer channel that only retains …\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nReceiving-half of the <code>broadcast</code> channel.\nSending-half of the <code>broadcast</code> channel.\nBlocking receive to call outside of asynchronous contexts.\nCreate a bounded, multi-producer, multi-consumer channel …\nBroadcast error types\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if there are no queued values.\nReturns true if there aren’t any messages in the channel …\nReturns the number of queued values.\nReturns the number of messages that were sent into the …\nCreates the sending-half of the <code>broadcast</code> channel.\nReturns the number of active receivers.\nReceives the next value for this receiver.\nRe-subscribes to the channel starting from the current …\nReturns <code>true</code> if senders belong to the same channel.\nReturns <code>true</code> if receivers belong to the same channel.\nAttempts to send a value to all active <code>Receiver</code> handles, …\nCreates a new <code>Receiver</code> handle that will receive values …\nAttempts to return a pending value on this receiver …\nThere are no more active senders implying no further …\nThere are no more active senders implying no further …\nThe channel is currently empty. There are still active …\nThe receiver lagged too far behind. Attempting to receive …\nThe receiver lagged too far behind and has been forcibly …\nAn error returned from the <code>recv</code> function on a <code>Receiver</code>.\nError returned by the <code>send</code> function on a <code>Sender</code>.\nAn error returned from the <code>try_recv</code> function on a <code>Receiver</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFuture returned from <code>Notify::notified()</code>.\nAdds this future to the list of futures that are ready to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOwned permit to send one value into the channel.\nPermits to send one value into the channel.\nAn <code>Iterator</code> of <code>Permit</code> that can be used to hold <code>n</code> slots in …\nReceives values from the associated <code>Sender</code>.\nSends values to the associated <code>Receiver</code>.\nReceive values from the associated <code>UnboundedSender</code>.\nSend values to the associated <code>UnboundedReceiver</code>.\nA sender that does not prevent the channel from being …\nAn unbounded sender that does not prevent the channel from …\nBlocking receive to call outside of asynchronous contexts.\nBlocking receive to call outside of asynchronous contexts.\nBlocking send to call outside of asynchronous contexts.\nReturns the current capacity of the channel.\nCreates a bounded mpsc channel for communicating between …\nCloses the receiving half of a channel without dropping it.\nCloses the receiving half of a channel, without dropping …\nCompletes when the receiver has dropped.\nCompletes when the receiver has dropped.\nConverts the <code>Sender</code> to a <code>WeakSender</code> that does not count …\nConverts the <code>UnboundedSender</code> to a <code>WeakUnboundedSender</code> that …\nChannel error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the channel has been closed. This happens when …\nChecks if a channel is closed.\nChecks if the channel has been closed. This happens when …\nChecks if a channel is closed.\nChecks if a channel is empty.\nChecks if a channel is empty.\nReturns the number of messages in the channel.\nReturns the number of messages in the channel.\nReturns the maximum buffer capacity of the channel.\nPolls to receive the next message on this channel.\nPolls to receive the next message on this channel.\nPolls to receive multiple messages on this channel, …\nPolls to receive multiple messages on this channel, …\nReceives the next value for this receiver.\nReceives the next value for this receiver.\nReceives the next values for this receiver and extends …\nReceives the next values for this receiver and extends …\nReleases the reserved capacity <em>without</em> sending a message, …\nWaits for channel capacity. Once capacity to send one …\nWaits for channel capacity. Once capacity to send <code>n</code> …\nWaits for channel capacity, moving the <code>Sender</code> and …\nReturns <code>true</code> if senders belong to the same channel.\nReturns <code>true</code> if senders belong to the same channel.\nSends a value, waiting until there is capacity.\nSends a value using the reserved capacity.\nSends a value using the reserved capacity.\nAttempts to send a message on this <code>UnboundedSender</code> without …\nSends a value, waiting until there is capacity, but only …\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>Sender</code> handles.\nReturns the number of <code>UnboundedSender</code> handles.\nReturns the number of <code>UnboundedSender</code> handles.\nTries to receive the next value for this receiver.\nTries to receive the next value for this receiver.\nTries to acquire a slot in the channel without waiting for …\nTries to acquire <code>n</code> slots in the channel without waiting …\nTries to acquire a slot in the channel without waiting for …\nAttempts to immediately send a message on this <code>Sender</code>\nCreates an unbounded mpsc channel for communicating …\nTries to convert a <code>WeakSender</code> into a <code>Sender</code>. This will …\nTries to convert a <code>WeakUnboundedSender</code> into an …\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>WeakSender</code> handles.\nReturns the number of <code>WeakUnboundedSender</code> handles.\nReturns the number of <code>WeakUnboundedSender</code> handles.\nThe receive half of the channel was explicitly closed or …\nThe receive half of the channel was explicitly closed or …\nThe <strong>channel</strong>’s sending half has become disconnected, and …\nThis <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …\nThe data could not be sent on the channel because the …\nError returned by the <code>Sender</code>.\nError returned by <code>Sender::send_timeout</code>].\nThe data could not be sent on the channel because the …\nError returned by <code>try_recv</code>.\nThis enumeration is the list of the possible error …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReceives a value from the associated <code>Sender</code>.\nSends a value to the associated <code>Receiver</code>.\nBlocking receive to call outside of asynchronous contexts.\nCreates a new one-shot channel for sending single values …\nPrevents the associated <code>Sender</code> handle from sending a value.\nWaits for the associated <code>Receiver</code> handle to close.\n<code>Oneshot</code> error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the associated <code>Receiver</code> handle has been …\nChecks whether the <code>oneshot</code> channel has been closed, and if …\nAttempts to send a value on this channel, returning it …\nAttempts to receive a value.\nThe send half of the channel was dropped without sending a …\nThe send half of the channel has not yet sent a value.\nError returned by the <code>Future</code> implementation for <code>Receiver</code>.\nError returned by the <code>try_recv</code> function on <code>Receiver</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReceives values from the associated <code>Sender</code>.\nReturns a reference to the inner value.\nSends values to the associated <code>Receiver</code>.\nReturns a reference to the most recently sent value.\nReturns a reference to the most recently sent value\nReturns a reference to the most recently sent value and …\nWaits for a change notification, then marks the newest …\nCreates a new watch channel, returning the “send” and …\nCompletes when all receivers have dropped.\nWatch error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks if this channel contains a message that this …\nIndicates if the borrowed value is considered as <em>changed</em> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the channel has been closed. This happens when …\nMarks the state as changed.\nMarks the state as unchanged.\nCreates the sending-half of the <code>watch</code> channel.\nReturns the number of receivers that currently exist.\nReturns <code>true</code> if receivers belong to the same channel.\nSends a new value via the channel, notifying all receivers.\nModifies the watched value <strong>conditionally</strong> in-place, …\nModifies the watched value <strong>unconditionally</strong> in-place, …\nSends a new value via the channel, notifying all receivers …\nCreates a new <code>Receiver</code> connected to this <code>Sender</code>.\nWaits for a value that satisfies the provided condition.\nError produced when receiving a change notification.\nError produced when sending a value fails.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn owned permission to abort a spawned task, without …\nTask failed to execute to completion.\nAn owned permission to join on a task (await its …\nA collection of tasks spawned on a Tokio runtime.\nContext guard for <code>LocalSet</code>\nA key for task-local data.\nA set of tasks which are executed on the same thread.\nFuture for the <code>unconstrained</code> method.\nAbort the task associated with the handle.\nAbort the task associated with the handle.\nAborts all tasks on this <code>JoinSet</code>.\nReturns a new <code>AbortHandle</code> that can be used to remotely …\nRuns the provided blocking function on the current thread …\nRuns a future to completion on the provided runtime, …\nRemoves all tasks from this <code>JoinSet</code> without aborting them.\nEnters the context of this <code>LocalSet</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTask-related futures.\nReturns a copy of the task-local value if the task-local …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the join error, returning the object with which …\nReturns true if the error was caused by the task being …\nReturns whether the <code>JoinSet</code> is empty.\nChecks if the task associated with this <code>AbortHandle</code> has …\nChecks if the task associated with this <code>JoinHandle</code> has …\nReturns true if the error was caused by the task panicking.\nWaits until one of the tasks in the set completes and …\nReturns the number of tasks currently in the <code>JoinSet</code>.\nCreate a new <code>JoinSet</code>.\nReturns a new local task set.\nPolls for one of the tasks in the set to complete.\nRuns a future to completion on the local set, returning …\nSets a value <code>T</code> as the task-local value for the future <code>F</code>.\nAborts all tasks and waits for them to finish shutting …\nSpawns a new asynchronous task, returning a <code>JoinHandle</code> for …\nSpawn the provided task on the <code>JoinSet</code>, returning an …\nRuns the provided closure on a thread where blocking is …\nSpawn the blocking code on the blocking threadpool and …\nSpawn the blocking code on the blocking threadpool of the …\nSpawns a <code>!Send</code> future on the current <code>LocalSet</code>.\nSpawn the provided task on the current <code>LocalSet</code> and store …\nSpawns a <code>!Send</code> task onto the local task set.\nSpawn the provided task on the provided <code>LocalSet</code> and store …\nSpawn the provided task on the provided runtime and store …\nSets a value <code>T</code> as the task-local value for the closure <code>F</code>.\nConsumes the join error, returning the object with which …\nTries to join one of the tasks in the set that has …\nAccesses the current task-local and runs the provided …\nTurn off cooperative scheduling for a future. The future …\nAccesses the current task-local and runs the provided …\nYields execution back to the Tokio runtime.\nA future that sets a value <code>T</code> of a task local for the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the value stored in the task local by this …\nTicks as fast as possible until caught up.\nTick at multiples of <code>period</code> from when <code>tick</code> was called, …\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nInterval returned by <code>interval</code> and <code>interval_at</code>.\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nDefines the behavior of an <code>Interval</code> when it misses a tick.\nThe duration of one nanosecond.\nThe duration of one second.\nSkips missed ticks and tick on the next multiple of <code>period</code> …\nFuture returned by <code>sleep</code> and <code>sleep_until</code>.\nFuture returned by <code>timeout</code> and <code>timeout_at</code>.\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nReturns the total number of whole microseconds contained …")